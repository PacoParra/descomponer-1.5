cm <- diag(wi)
IOW2 <- T1 %*% cm
IOW3 <- 0.5*IOW2+0.5*IOW1
IOW4 <- rbind(IOW3[1:(2*n),],IOW2[(2*n+1),])
IOW4[is.na(IOW4)]<-0
coef=t(IOW4)/colSums(IOW4)
coef[is.na(coef)]<-0
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n]
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- IOW4[,(n+1)]+IOW4[,(n+2)]+IOW4[,(n+3)]
Dfinal <- matrix(Df[1:n], ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(IOW4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou
#write.csv(MIO2,'mio2_while.csv')
act <- c(t(act))
desv <- c(t(desv))
#print(cbind(act,pro,desv))
}
abs(max(1-desv))
iteracion
print(cbind(act,pro,desv))
act[26]=1.25
act
n <- length(act)-5
T1 <- as.matrix(T1)
act <- as.matrix(act)
f<- 0.2
m<- 70
error<-0.0015
wo<- c(act[1:n],act[1:n],act[n+4]) # tasas 1 a n y tasa va
rm <- diag(wo)
T2 <- rm %*% T1
wi <- c(act[1:n],act[n+1],act[n+2],act[n+3]) # tasa 1 a n y tasa cons, inv y export
cm <- diag(wi)
T3 <- T1 %*% cm
T4 <- (T3+T2)/2
T4 <- rbind(T4[1:(2*n),],T3[(2*n+1),])
T4[is.na(T4)]<-0
# Saca (r1:r3, c1:c3) Cear funcion inversa de leontief
coef=t(T4)/colSums(T4)
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n] # n sectores
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- T4[,(n+1)]+T4[,(n+2)]+T4[,(n+3)]
Dfinal <- matrix(Df[1:n],ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(T4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou # hasta aquí OK
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
iteracion<-0
diferencial <-abs(max(1-desv))
# iteracciones
while (error < abs(max(1-desv))) {
#while (iteracion<5000) {
iteracion<-iteracion+1
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
delta <- desv-1
coef <- ifelse(delta<0,1-(((1-desv)*100)^f)/100,1+(((desv-1)*100)^f)/100)
rev1 <- c(coef[1:n],rep(coef[(n+5)],n),coef[(n+4)]) # ejemplo repita valores añadidos para import
wo <- rev1*wo
rm <- diag(wo)
IOW1 <- rm %*% T1
rev2 <- c(coef[1:(n+3)]) # cambié n+2 por n+3
wi <- wi*rev2
cm <- diag(wi)
IOW2 <- T1 %*% cm
IOW3 <- 0.5*IOW2+0.5*IOW1
IOW4 <- rbind(IOW3[1:(2*n),],IOW2[(2*n+1),])
IOW4[is.na(IOW4)]<-0
coef=t(IOW4)/colSums(IOW4)
coef[is.na(coef)]<-0
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n]
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- IOW4[,(n+1)]+IOW4[,(n+2)]+IOW4[,(n+3)]
Dfinal <- matrix(Df[1:n], ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(IOW4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou
#write.csv(MIO2,'mio2_while.csv')
act <- c(t(act))
desv <- c(t(desv))
#print(cbind(act,pro,desv))
}
abs(max(1-desv))
iteracion
print(cbind(act,pro,desv))
act[26]=1.13
n <- length(act)-5
T1 <- as.matrix(T1)
act <- as.matrix(act)
f<- 0.2
m<- 70
error<-0.0015
# primera iteracción
wo<- c(act[1:n],act[1:n],act[n+4]) # tasas 1 a n y tasa va
rm <- diag(wo)
T2 <- rm %*% T1
wi <- c(act[1:n],act[n+1],act[n+2],act[n+3]) # tasa 1 a n y tasa cons, inv y export
cm <- diag(wi)
T3 <- T1 %*% cm
T4 <- (T3+T2)/2
T4 <- rbind(T4[1:(2*n),],T3[(2*n+1),])
T4[is.na(T4)]<-0
# Saca (r1:r3, c1:c3) Cear funcion inversa de leontief
coef=t(T4)/colSums(T4)
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n] # n sectores
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- T4[,(n+1)]+T4[,(n+2)]+T4[,(n+3)]
Dfinal <- matrix(Df[1:n],ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(T4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou # hasta aquí OK
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
iteracion<-0
diferencial <-abs(max(1-desv))
# iteracciones
while (error < abs(max(1-desv))) {
#while (iteracion<5000) {
iteracion<-iteracion+1
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
delta <- desv-1
coef <- ifelse(delta<0,1-(((1-desv)*100)^f)/100,1+(((desv-1)*100)^f)/100)
rev1 <- c(coef[1:n],rep(coef[(n+5)],n),coef[(n+4)]) # ejemplo repita valores añadidos para import
wo <- rev1*wo
rm <- diag(wo)
IOW1 <- rm %*% T1
rev2 <- c(coef[1:(n+3)]) # cambié n+2 por n+3
wi <- wi*rev2
cm <- diag(wi)
IOW2 <- T1 %*% cm
IOW3 <- 0.5*IOW2+0.5*IOW1
IOW4 <- rbind(IOW3[1:(2*n),],IOW2[(2*n+1),])
IOW4[is.na(IOW4)]<-0
coef=t(IOW4)/colSums(IOW4)
coef[is.na(coef)]<-0
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n]
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- IOW4[,(n+1)]+IOW4[,(n+2)]+IOW4[,(n+3)]
Dfinal <- matrix(Df[1:n], ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(IOW4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou
#write.csv(MIO2,'mio2_while.csv')
act <- c(t(act))
desv <- c(t(desv))
#print(cbind(act,pro,desv))
}
abs(max(1-desv))
iteracion
print(cbind(act,pro,desv))
act[26]=1.10
n <- length(act)-5
T1 <- as.matrix(T1)
act <- as.matrix(act)
f<- 0.2
m<- 70
error<-0.0015
# primera iteracción
wo<- c(act[1:n],act[1:n],act[n+4]) # tasas 1 a n y tasa va
rm <- diag(wo)
T2 <- rm %*% T1
wi <- c(act[1:n],act[n+1],act[n+2],act[n+3]) # tasa 1 a n y tasa cons, inv y export
cm <- diag(wi)
T3 <- T1 %*% cm
T4 <- (T3+T2)/2
T4 <- rbind(T4[1:(2*n),],T3[(2*n+1),])
T4[is.na(T4)]<-0
# Saca (r1:r3, c1:c3) Cear funcion inversa de leontief
coef=t(T4)/colSums(T4)
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n] # n sectores
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- T4[,(n+1)]+T4[,(n+2)]+T4[,(n+3)]
Dfinal <- matrix(Df[1:n],ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(T4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou # hasta aquí OK
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
iteracion<-0
diferencial <-abs(max(1-desv))
# iteracciones
while (error < abs(max(1-desv))) {
#while (iteracion<5000) {
iteracion<-iteracion+1
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
delta <- desv-1
coef <- ifelse(delta<0,1-(((1-desv)*100)^f)/100,1+(((desv-1)*100)^f)/100)
rev1 <- c(coef[1:n],rep(coef[(n+5)],n),coef[(n+4)]) # ejemplo repita valores añadidos para import
wo <- rev1*wo
rm <- diag(wo)
IOW1 <- rm %*% T1
rev2 <- c(coef[1:(n+3)]) # cambié n+2 por n+3
wi <- wi*rev2
cm <- diag(wi)
IOW2 <- T1 %*% cm
IOW3 <- 0.5*IOW2+0.5*IOW1
IOW4 <- rbind(IOW3[1:(2*n),],IOW2[(2*n+1),])
IOW4[is.na(IOW4)]<-0
coef=t(IOW4)/colSums(IOW4)
coef[is.na(coef)]<-0
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n]
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- IOW4[,(n+1)]+IOW4[,(n+2)]+IOW4[,(n+3)]
Dfinal <- matrix(Df[1:n], ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(IOW4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou
#write.csv(MIO2,'mio2_while.csv')
act <- c(t(act))
desv <- c(t(desv))
#print(cbind(act,pro,desv))
}
abs(max(1-desv))
iteracion
print(cbind(act,pro,desv))
while (error < abs(max(1-desv))) {
#while (iteracion<5000) {
iteracion<-iteracion+1
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
delta <- desv-1
coef <- ifelse(delta<0,1-(((1-desv)*100)^f)/100,1+(((desv-1)*100)^f)/100)
rev1 <- c(coef[1:n],rep(coef[(n+5)],n),coef[(n+4)]) # ejemplo repita valores añadidos para import
wo <- rev1*wo
rm <- diag(wo)
IOW1 <- rm %*% T1
rev2 <- c(coef[1:(n+3)]) # cambié n+2 por n+3
wi <- wi*rev2
cm <- diag(wi)
IOW2 <- T1 %*% cm
IOW3 <- 0.5*IOW2+0.5*IOW1
IOW4 <- rbind(IOW3[1:(2*n),],IOW2[(2*n+1),])
IOW4[is.na(IOW4)]<-0
coef=t(IOW4)/colSums(IOW4)
coef[is.na(coef)]<-0
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n]
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- IOW4[,(n+1)]+IOW4[,(n+2)]+IOW4[,(n+3)]
Dfinal <- matrix(Df[1:n], ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(IOW4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou
#write.csv(MIO2,'mio2_while.csv')
act <- c(t(act))
desv <- c(t(desv))
#print(cbind(act,pro,desv))
}
abs(max(1-desv))
iteracion
print(cbind(act,pro,desv))
while (error < abs(max(1-desv))) {
#while (iteracion<5000) {
iteracion<-iteracion+1
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
delta <- desv-1
coef <- ifelse(delta<0,1-(((1-desv)*100)^f)/100,1+(((desv-1)*100)^f)/100)
rev1 <- c(coef[1:n],rep(coef[(n+5)],n),coef[(n+4)]) # ejemplo repita valores añadidos para import
wo <- rev1*wo
rm <- diag(wo)
IOW1 <- rm %*% T1
rev2 <- c(coef[1:(n+3)]) # cambié n+2 por n+3
wi <- wi*rev2
cm <- diag(wi)
IOW2 <- T1 %*% cm
IOW3 <- 0.5*IOW2+0.5*IOW1
IOW4 <- rbind(IOW3[1:(2*n),],IOW2[(2*n+1),])
IOW4[is.na(IOW4)]<-0
coef=t(IOW4)/colSums(IOW4)
coef[is.na(coef)]<-0
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n]
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- IOW4[,(n+1)]+IOW4[,(n+2)]+IOW4[,(n+3)]
Dfinal <- matrix(Df[1:n], ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(IOW4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou
#write.csv(MIO2,'mio2_while.csv')
act <- c(t(act))
desv <- c(t(desv))
#print(cbind(act,pro,desv))
}
print(cbind(act,pro,desv))
act[26]=1.07
n <- length(act)-5
T1 <- as.matrix(T1)
act <- as.matrix(act)
f<- 0.2
m<- 70
error<-0.0015
# primera iteracción
wo<- c(act[1:n],act[1:n],act[n+4]) # tasas 1 a n y tasa va
rm <- diag(wo)
T2 <- rm %*% T1
wi <- c(act[1:n],act[n+1],act[n+2],act[n+3]) # tasa 1 a n y tasa cons, inv y export
cm <- diag(wi)
T3 <- T1 %*% cm
T4 <- (T3+T2)/2
T4 <- rbind(T4[1:(2*n),],T3[(2*n+1),])
T4[is.na(T4)]<-0
# Saca (r1:r3, c1:c3) Cear funcion inversa de leontief
coef=t(T4)/colSums(T4)
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n] # n sectores
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- T4[,(n+1)]+T4[,(n+2)]+T4[,(n+3)]
Dfinal <- matrix(Df[1:n],ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(T4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou # hasta aquí OK
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
iteracion<-0
diferencial <-abs(max(1-desv))
# iteracciones
while (error < abs(max(1-desv))) {
#while (iteracion<5000) {
iteracion<-iteracion+1
sum1 <- colSums(T1)
sum2 <- colSums(MIO2)
sum3 <- rowSums(T1)
sum4 <- rowSums(MIO2)
pro <- c(MIO2[(2*n+1),1:n]/T1[(2*n+1),1:n],sum2[(n+1)]/sum1[(n+1)],sum2[(n+2)]/sum1[(n+2)],sum2[(n+3)]/sum1[(n+3)],sum4[(2*n+1)]/sum3[(2*n+1)],
sum(sum4[(n+1):(n+n)])/sum(sum3[(n+1):(n+n)]))
pro[is.nan(pro)]<-0
desv <- act/pro
desv[is.na(desv)]<-1
delta <- desv-1
coef <- ifelse(delta<0,1-(((1-desv)*100)^f)/100,1+(((desv-1)*100)^f)/100)
rev1 <- c(coef[1:n],rep(coef[(n+5)],n),coef[(n+4)]) # ejemplo repita valores añadidos para import
wo <- rev1*wo
rm <- diag(wo)
IOW1 <- rm %*% T1
rev2 <- c(coef[1:(n+3)]) # cambié n+2 por n+3
wi <- wi*rev2
cm <- diag(wi)
IOW2 <- T1 %*% cm
IOW3 <- 0.5*IOW2+0.5*IOW1
IOW4 <- rbind(IOW3[1:(2*n),],IOW2[(2*n+1),])
IOW4[is.na(IOW4)]<-0
coef=t(IOW4)/colSums(IOW4)
coef[is.na(coef)]<-0
coef2=t(coef)
coef2[is.nan(coef2)]<-0
coef4<-coef2[1:n,1:n]
i <- c(rep(1,n))
Id <- diag(i)
leontief=Id-coef4
inversa=solve(leontief)
inversa[is.nan(inversa)]<-0
Df <- IOW4[,(n+1)]+IOW4[,(n+2)]+IOW4[,(n+3)]
Dfinal <- matrix(Df[1:n], ncol=1)
O <- inversa %*% Dfinal
O2 <- colSums(IOW4)
O3 <- c(O,O2[n+1],O2[n+2],O2[n+3])
dou <- diag(O3)
MIO2 <- coef2 %*% dou
#write.csv(MIO2,'mio2_while.csv')
act <- c(t(act))
desv <- c(t(desv))
#print(cbind(act,pro,desv))
}
abs(max(1-desv))
iteracion
print(cbind(act,pro,desv))
